package com.lea.dal.domain.entities;
// Generated 28.06.2018. 08:51:52 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * BasicDetails generated by hbm2java
 */
@Entity
@Table(name="BasicDetails"
    ,schema="dbo"
    ,catalog="OutpatientManagement"
)
public class BasicDetails  implements java.io.Serializable {


     private int idperson;
     private Address address;
     private ContactInformation contactInformation;
     private String firstName;
     private String middleName;
     private String lastName;
     private Boolean sex;
     private Date dateOfBirth;
     private Set<Patient> patientsForNextOfKinId = new HashSet<Patient>(0);
     private Set<Patient> patientsForBasicDetailsId = new HashSet<Patient>(0);
     private Set<Doctor> doctors = new HashSet<Doctor>(0);

    public BasicDetails() {
    }

	
    public BasicDetails(int idperson, ContactInformation contactInformation, String firstName, String lastName) {
        this.idperson = idperson;
        this.contactInformation = contactInformation;
        this.firstName = firstName;
        this.lastName = lastName;
    }
    public BasicDetails(int idperson, Address address, ContactInformation contactInformation, String firstName, String middleName, String lastName, Boolean sex, Date dateOfBirth, Set<Patient> patientsForNextOfKinId, Set<Patient> patientsForBasicDetailsId, Set<Doctor> doctors) {
       this.idperson = idperson;
       this.address = address;
       this.contactInformation = contactInformation;
       this.firstName = firstName;
       this.middleName = middleName;
       this.lastName = lastName;
       this.sex = sex;
       this.dateOfBirth = dateOfBirth;
       this.patientsForNextOfKinId = patientsForNextOfKinId;
       this.patientsForBasicDetailsId = patientsForBasicDetailsId;
       this.doctors = doctors;
    }
   
     @Id @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name="IDPerson", unique=true, nullable=false)
    public int getIdperson() {
        return this.idperson;
    }
    
    public void setIdperson(int idperson) {
        this.idperson = idperson;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="AddressID")
    public Address getAddress() {
        return this.address;
    }
    
    public void setAddress(Address address) {
        this.address = address;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ContactInformationID", nullable=false)
    public ContactInformation getContactInformation() {
        return this.contactInformation;
    }
    
    public void setContactInformation(ContactInformation contactInformation) {
        this.contactInformation = contactInformation;
    }

    
    @Column(name="FirstName", nullable=false)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    
    @Column(name="MiddleName")
    public String getMiddleName() {
        return this.middleName;
    }
    
    public void setMiddleName(String middleName) {
        this.middleName = middleName;
    }

    
    @Column(name="LastName", nullable=false)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    
    @Column(name="Sex")
    public Boolean getSex() {
        return this.sex;
    }
    
    public void setSex(Boolean sex) {
        this.sex = sex;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DateOfBirth", length=10)
    public Date getDateOfBirth() {
        return this.dateOfBirth;
    }
    
    public void setDateOfBirth(Date dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="basicDetailsByNextOfKinId")
    public Set<Patient> getPatientsForNextOfKinId() {
        return this.patientsForNextOfKinId;
    }
    
    public void setPatientsForNextOfKinId(Set<Patient> patientsForNextOfKinId) {
        this.patientsForNextOfKinId = patientsForNextOfKinId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="basicDetailsByBasicDetailsId")
    public Set<Patient> getPatientsForBasicDetailsId() {
        return this.patientsForBasicDetailsId;
    }
    
    public void setPatientsForBasicDetailsId(Set<Patient> patientsForBasicDetailsId) {
        this.patientsForBasicDetailsId = patientsForBasicDetailsId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="basicDetails")
    public Set<Doctor> getDoctors() {
        return this.doctors;
    }
    
    public void setDoctors(Set<Doctor> doctors) {
        this.doctors = doctors;
    }




}


