package com.lea.dal.domain.entities;
// Generated 28.06.2018. 08:51:52 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PersonalDetails generated by hbm2java
 */
@Entity
@Table(name="PersonalDetails"
    ,schema="dbo"
    ,catalog="VirgoHospitals"
)
public class PersonalDetails  implements java.io.Serializable {


     private int idpersonalDetails;
     private BloodType bloodType;
     private MaritalStatus maritalStatus;
     private Boolean sex;
     private Date dateOfBirth;
     private String occupation;
     private Double height;
     private Double weight;
     private Set<Patient> patients = new HashSet<Patient>(0);

    public PersonalDetails() {
    }

	
    public PersonalDetails(int idpersonalDetails) {
        this.idpersonalDetails = idpersonalDetails;
    }
    public PersonalDetails(int idpersonalDetails, BloodType bloodType, MaritalStatus maritalStatus, Boolean sex, Date dateOfBirth, String occupation, Double height, Double weight, Set<Patient> patients) {
       this.idpersonalDetails = idpersonalDetails;
       this.bloodType = bloodType;
       this.maritalStatus = maritalStatus;
       this.sex = sex;
       this.dateOfBirth = dateOfBirth;
       this.occupation = occupation;
       this.height = height;
       this.weight = weight;
       this.patients = patients;
    }
   
     @Id @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name="IDPersonalDetails", unique=true, nullable=false)
    public int getIdpersonalDetails() {
        return this.idpersonalDetails;
    }
    
    public void setIdpersonalDetails(int idpersonalDetails) {
        this.idpersonalDetails = idpersonalDetails;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="BloodTypeID")
    public BloodType getBloodType() {
        return this.bloodType;
    }
    
    public void setBloodType(BloodType bloodType) {
        this.bloodType = bloodType;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="MaritalStatusID")
    public MaritalStatus getMaritalStatus() {
        return this.maritalStatus;
    }
    
    public void setMaritalStatus(MaritalStatus maritalStatus) {
        this.maritalStatus = maritalStatus;
    }

    
    @Column(name="Sex")
    public Boolean getSex() {
        return this.sex;
    }
    
    public void setSex(Boolean sex) {
        this.sex = sex;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DateOfBirth", length=10)
    public Date getDateOfBirth() {
        return this.dateOfBirth;
    }
    
    public void setDateOfBirth(Date dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
    }

    
    @Column(name="Occupation")
    public String getOccupation() {
        return this.occupation;
    }
    
    public void setOccupation(String occupation) {
        this.occupation = occupation;
    }

    
    @Column(name="Height", precision=53, scale=0)
    public Double getHeight() {
        return this.height;
    }
    
    public void setHeight(Double height) {
        this.height = height;
    }

    
    @Column(name="Weight", precision=53, scale=0)
    public Double getWeight() {
        return this.weight;
    }
    
    public void setWeight(Double weight) {
        this.weight = weight;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="personalDetails")
    public Set<Patient> getPatients() {
        return this.patients;
    }
    
    public void setPatients(Set<Patient> patients) {
        this.patients = patients;
    }




}
